
#include "Meta_Maps.h"

#include <eglbinding/egl/extension.h>


using namespace egl;

namespace eglbinding
{

const std::unordered_map<std::string, EGLextension> Meta_ExtensionsByString
{
// NOTE: this is intended to work irrespective of a SYMBOLS_BY_STRINGS definition.
    { "EGL", EGL_ANDROID_blob_cacheextension::EGL_ANDROID_blob_cache },
    { "EGL", EGL_ANDROID_framebuffer_targetextension::EGL_ANDROID_framebuffer_target },
    { "EGL", EGL_ANDROID_image_native_bufferextension::EGL_ANDROID_image_native_buffer },
    { "EGL", EGL_ANDROID_native_fence_syncextension::EGL_ANDROID_native_fence_sync },
    { "EGL", EGL_ANDROID_recordableextension::EGL_ANDROID_recordable },
    { "EGL", EGL_ANGLE_d3d_share_handle_client_bufferextension::EGL_ANGLE_d3d_share_handle_client_buffer },
    { "EGL", EGL_ANGLE_device_d3dextension::EGL_ANGLE_device_d3d },
    { "EGL", EGL_ANGLE_query_surface_pointerextension::EGL_ANGLE_query_surface_pointer },
    { "EGL", EGL_ANGLE_surface_d3d_texture_2d_share_handleextension::EGL_ANGLE_surface_d3d_texture_2d_share_handle },
    { "EGL", EGL_ANGLE_window_fixed_sizeextension::EGL_ANGLE_window_fixed_size },
    { "EGL", EGL_ARM_pixmap_multisample_discardextension::EGL_ARM_pixmap_multisample_discard },
    { "EGL", EGL_EXT_buffer_ageextension::EGL_EXT_buffer_age },
    { "EGL", EGL_EXT_client_extensionsextension::EGL_EXT_client_extensions },
    { "EGL", EGL_EXT_create_context_robustnessextension::EGL_EXT_create_context_robustness },
    { "EGL", EGL_EXT_device_baseextension::EGL_EXT_device_base },
    { "EGL", EGL_EXT_device_drmextension::EGL_EXT_device_drm },
    { "EGL", EGL_EXT_device_enumerationextension::EGL_EXT_device_enumeration },
    { "EGL", EGL_EXT_device_openwfextension::EGL_EXT_device_openwf },
    { "EGL", EGL_EXT_device_queryextension::EGL_EXT_device_query },
    { "EGL", EGL_EXT_image_dma_buf_importextension::EGL_EXT_image_dma_buf_import },
    { "EGL", EGL_EXT_multiview_windowextension::EGL_EXT_multiview_window },
    { "EGL", EGL_EXT_output_baseextension::EGL_EXT_output_base },
    { "EGL", EGL_EXT_output_drmextension::EGL_EXT_output_drm },
    { "EGL", EGL_EXT_output_openwfextension::EGL_EXT_output_openwf },
    { "EGL", EGL_EXT_platform_baseextension::EGL_EXT_platform_base },
    { "EGL", EGL_EXT_platform_deviceextension::EGL_EXT_platform_device },
    { "EGL", EGL_EXT_platform_waylandextension::EGL_EXT_platform_wayland },
    { "EGL", EGL_EXT_platform_x11extension::EGL_EXT_platform_x11 },
    { "EGL", EGL_EXT_protected_surfaceextension::EGL_EXT_protected_surface },
    { "EGL", EGL_EXT_stream_consumer_egloutputextension::EGL_EXT_stream_consumer_egloutput },
    { "EGL", EGL_EXT_swap_buffers_with_damageextension::EGL_EXT_swap_buffers_with_damage },
    { "EGL", EGL_EXT_yuv_surfaceextension::EGL_EXT_yuv_surface },
    { "EGL", EGL_HI_clientpixmapextension::EGL_HI_clientpixmap },
    { "EGL", EGL_HI_colorformatsextension::EGL_HI_colorformats },
    { "EGL", EGL_IMG_context_priorityextension::EGL_IMG_context_priority },
    { "EGL", EGL_KHR_cl_eventextension::EGL_KHR_cl_event },
    { "EGL", EGL_KHR_cl_event2extension::EGL_KHR_cl_event2 },
    { "EGL", EGL_KHR_client_get_all_proc_addressesextension::EGL_KHR_client_get_all_proc_addresses },
    { "EGL", EGL_KHR_config_attribsextension::EGL_KHR_config_attribs },
    { "EGL", EGL_KHR_create_contextextension::EGL_KHR_create_context },
    { "EGL", EGL_KHR_create_context_no_errorextension::EGL_KHR_create_context_no_error },
    { "EGL", EGL_KHR_fence_syncextension::EGL_KHR_fence_sync },
    { "EGL", EGL_KHR_get_all_proc_addressesextension::EGL_KHR_get_all_proc_addresses },
    { "EGL", EGL_KHR_gl_colorspaceextension::EGL_KHR_gl_colorspace },
    { "EGL", EGL_KHR_gl_renderbuffer_imageextension::EGL_KHR_gl_renderbuffer_image },
    { "EGL", EGL_KHR_gl_texture_2D_imageextension::EGL_KHR_gl_texture_2D_image },
    { "EGL", EGL_KHR_gl_texture_3D_imageextension::EGL_KHR_gl_texture_3D_image },
    { "EGL", EGL_KHR_gl_texture_cubemap_imageextension::EGL_KHR_gl_texture_cubemap_image },
    { "EGL", EGL_KHR_imageextension::EGL_KHR_image },
    { "EGL", EGL_KHR_image_baseextension::EGL_KHR_image_base },
    { "EGL", EGL_KHR_image_pixmapextension::EGL_KHR_image_pixmap },
    { "EGL", EGL_KHR_lock_surfaceextension::EGL_KHR_lock_surface },
    { "EGL", EGL_KHR_lock_surface2extension::EGL_KHR_lock_surface2 },
    { "EGL", EGL_KHR_lock_surface3extension::EGL_KHR_lock_surface3 },
    { "EGL", EGL_KHR_partial_updateextension::EGL_KHR_partial_update },
    { "EGL", EGL_KHR_platform_androidextension::EGL_KHR_platform_android },
    { "EGL", EGL_KHR_platform_gbmextension::EGL_KHR_platform_gbm },
    { "EGL", EGL_KHR_platform_waylandextension::EGL_KHR_platform_wayland },
    { "EGL", EGL_KHR_platform_x11extension::EGL_KHR_platform_x11 },
    { "EGL", EGL_KHR_reusable_syncextension::EGL_KHR_reusable_sync },
    { "EGL", EGL_KHR_streamextension::EGL_KHR_stream },
    { "EGL", EGL_KHR_stream_consumer_gltextureextension::EGL_KHR_stream_consumer_gltexture },
    { "EGL", EGL_KHR_stream_cross_process_fdextension::EGL_KHR_stream_cross_process_fd },
    { "EGL", EGL_KHR_stream_fifoextension::EGL_KHR_stream_fifo },
    { "EGL", EGL_KHR_stream_producer_aldatalocatorextension::EGL_KHR_stream_producer_aldatalocator },
    { "EGL", EGL_KHR_stream_producer_eglsurfaceextension::EGL_KHR_stream_producer_eglsurface },
    { "EGL", EGL_KHR_surfaceless_contextextension::EGL_KHR_surfaceless_context },
    { "EGL", EGL_KHR_swap_buffers_with_damageextension::EGL_KHR_swap_buffers_with_damage },
    { "EGL", EGL_KHR_vg_parent_imageextension::EGL_KHR_vg_parent_image },
    { "EGL", EGL_KHR_wait_syncextension::EGL_KHR_wait_sync },
    { "EGL", EGL_MESA_drm_imageextension::EGL_MESA_drm_image },
    { "EGL", EGL_MESA_image_dma_buf_exportextension::EGL_MESA_image_dma_buf_export },
    { "EGL", EGL_MESA_platform_gbmextension::EGL_MESA_platform_gbm },
    { "EGL", EGL_NOK_swap_regionextension::EGL_NOK_swap_region },
    { "EGL", EGL_NOK_swap_region2extension::EGL_NOK_swap_region2 },
    { "EGL", EGL_NOK_texture_from_pixmapextension::EGL_NOK_texture_from_pixmap },
    { "EGL", EGL_NV_3dvision_surfaceextension::EGL_NV_3dvision_surface },
    { "EGL", EGL_NV_coverage_sampleextension::EGL_NV_coverage_sample },
    { "EGL", EGL_NV_coverage_sample_resolveextension::EGL_NV_coverage_sample_resolve },
    { "EGL", EGL_NV_cuda_eventextension::EGL_NV_cuda_event },
    { "EGL", EGL_NV_depth_nonlinearextension::EGL_NV_depth_nonlinear },
    { "EGL", EGL_NV_device_cudaextension::EGL_NV_device_cuda },
    { "EGL", EGL_NV_native_queryextension::EGL_NV_native_query },
    { "EGL", EGL_NV_post_convert_roundingextension::EGL_NV_post_convert_rounding },
    { "EGL", EGL_NV_post_sub_bufferextension::EGL_NV_post_sub_buffer },
    { "EGL", EGL_NV_stream_syncextension::EGL_NV_stream_sync },
    { "EGL", EGL_NV_syncextension::EGL_NV_sync },
    { "EGL", EGL_NV_system_timeextension::EGL_NV_system_time },
    { "EGL", EGL_TIZEN_image_native_bufferextension::EGL_TIZEN_image_native_buffer },
    { "EGL", EGL_TIZEN_image_native_surfaceextension::EGL_TIZEN_image_native_surface }
};

} // namespace eglbinding
