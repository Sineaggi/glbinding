#pragma once

#include <glesbinding/glesbinding_api.h>

#include <glesbinding/nogles.h>
#include <glesbinding/gles/types.h>


namespace gles
{

GLBINDING_API void glActiveShaderProgram(GLuint pipeline, GLuint program);
GLBINDING_API void glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
GLBINDING_API void glActiveTexture(GLenum texture);
GLBINDING_API void glAlphaFuncQCOM(GLenum func, GLclampf ref);
GLBINDING_API void glAttachShader(GLuint program, GLuint shader);
GLBINDING_API void glBeginConditionalRenderNV(GLuint id, GLenum mode);
GLBINDING_API void glBeginPerfMonitorAMD(GLuint monitor);
GLBINDING_API void glBeginPerfQueryINTEL(GLuint queryHandle);
GLBINDING_API void glBeginQuery(GLenum target, GLuint id);
GLBINDING_API void glBeginQueryEXT(GLenum target, GLuint id);
GLBINDING_API void glBeginTransformFeedback(GLenum primitiveMode);
GLBINDING_API void glBindAttribLocation(GLuint program, GLuint index, const GLchar * name);
GLBINDING_API void glBindBuffer(GLenum target, GLuint buffer);
GLBINDING_API void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
GLBINDING_API void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLBINDING_API void glBindFramebuffer(GLenum target, GLuint framebuffer);
GLBINDING_API void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
GLBINDING_API void glBindProgramPipeline(GLuint pipeline);
GLBINDING_API void glBindProgramPipelineEXT(GLuint pipeline);
GLBINDING_API void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
GLBINDING_API void glBindSampler(GLuint unit, GLuint sampler);
GLBINDING_API void glBindTexture(GLenum target, GLuint texture);
GLBINDING_API void glBindTransformFeedback(GLenum target, GLuint id);
GLBINDING_API void glBindVertexArray(GLuint array);
GLBINDING_API void glBindVertexArrayOES(GLuint array);
GLBINDING_API void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLBINDING_API void glBlendBarrierKHR();
GLBINDING_API void glBlendBarrierNV();
GLBINDING_API void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLBINDING_API void glBlendEquation(GLenum mode);
GLBINDING_API void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
GLBINDING_API void glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLBINDING_API void glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLBINDING_API void glBlendEquationiEXT(GLuint buf, GLenum mode);
GLBINDING_API void glBlendEquationiOES(GLuint buf, GLenum mode);
GLBINDING_API void glBlendFunc(GLenum sfactor, GLenum dfactor);
GLBINDING_API void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLBINDING_API void glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLBINDING_API void glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLBINDING_API void glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst);
GLBINDING_API void glBlendFunciOES(GLuint buf, GLenum src, GLenum dst);
GLBINDING_API void glBlendParameteriNV(GLenum pname, GLint value);
GLBINDING_API void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, ClearBufferMask mask, GLenum filter);
GLBINDING_API void glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLES2bitfield mask, GLenum filter);
GLBINDING_API void glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLES2bitfield mask, GLenum filter);
GLBINDING_API void glBufferData(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
GLBINDING_API void glBufferStorageEXT(GLenum target, GLsizeiptr size, const void * data, GLES2bitfield flags);
GLBINDING_API void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
GLBINDING_API GLenum glCheckFramebufferStatus(GLenum target);
GLBINDING_API void glClear(ClearBufferMask mask);
GLBINDING_API void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLBINDING_API void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value);
GLBINDING_API void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value);
GLBINDING_API void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value);
GLBINDING_API void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLBINDING_API void glClearDepthf(GLfloat d);
GLBINDING_API void glClearStencil(GLint s);
GLBINDING_API GLenum glClientWaitSync(GLsync sync, SyncObjectMask flags, GLuint64 timeout);
GLBINDING_API GLenum glClientWaitSyncAPPLE(GLsync sync, GLES2bitfield flags, GLuint64 timeout);
GLBINDING_API void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLBINDING_API void glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLBINDING_API void glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLBINDING_API void glCompileShader(GLuint shader);
GLBINDING_API void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLBINDING_API void glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLBINDING_API void glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLBINDING_API void glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLBINDING_API void glCopyPathNV(GLuint resultPath, GLuint srcPath);
GLBINDING_API void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLBINDING_API void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
GLBINDING_API void glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void glCoverFillPathNV(GLuint path, GLenum coverMode);
GLBINDING_API void glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void glCoverStrokePathNV(GLuint path, GLenum coverMode);
GLBINDING_API void glCoverageMaskNV(GLboolean mask);
GLBINDING_API void glCoverageModulationNV(GLenum components);
GLBINDING_API void glCoverageModulationTableNV(GLsizei n, const GLfloat * v);
GLBINDING_API void glCoverageOperationNV(GLenum operation);
GLBINDING_API void glCreatePerfQueryINTEL(GLuint queryId, GLuint * queryHandle);
GLBINDING_API GLuint glCreateProgram();
GLBINDING_API GLuint glCreateShader(GLenum type);
GLBINDING_API GLuint glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings);
GLBINDING_API GLuint glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar ** strings);
GLBINDING_API void glCullFace(GLenum mode);
GLBINDING_API void glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void * userParam);
GLBINDING_API void glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLBINDING_API void glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLBINDING_API void glDeleteBuffers(GLsizei n, const GLuint * buffers);
GLBINDING_API void glDeleteFencesNV(GLsizei n, const GLuint * fences);
GLBINDING_API void glDeleteFramebuffers(GLsizei n, const GLuint * framebuffers);
GLBINDING_API void glDeletePathsNV(GLuint path, GLsizei range);
GLBINDING_API void glDeletePerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLBINDING_API void glDeletePerfQueryINTEL(GLuint queryHandle);
GLBINDING_API void glDeleteProgram(GLuint program);
GLBINDING_API void glDeleteProgramPipelines(GLsizei n, const GLuint * pipelines);
GLBINDING_API void glDeleteProgramPipelinesEXT(GLsizei n, const GLuint * pipelines);
GLBINDING_API void glDeleteQueries(GLsizei n, const GLuint * ids);
GLBINDING_API void glDeleteQueriesEXT(GLsizei n, const GLuint * ids);
GLBINDING_API void glDeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers);
GLBINDING_API void glDeleteSamplers(GLsizei count, const GLuint * samplers);
GLBINDING_API void glDeleteShader(GLuint shader);
GLBINDING_API void glDeleteSync(GLsync sync);
GLBINDING_API void glDeleteSyncAPPLE(GLsync sync);
GLBINDING_API void glDeleteTextures(GLsizei n, const GLuint * textures);
GLBINDING_API void glDeleteTransformFeedbacks(GLsizei n, const GLuint * ids);
GLBINDING_API void glDeleteVertexArrays(GLsizei n, const GLuint * arrays);
GLBINDING_API void glDeleteVertexArraysOES(GLsizei n, const GLuint * arrays);
GLBINDING_API void glDepthFunc(GLenum func);
GLBINDING_API void glDepthMask(GLboolean flag);
GLBINDING_API void glDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat * v);
GLBINDING_API void glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f);
GLBINDING_API void glDepthRangef(GLfloat n, GLfloat f);
GLBINDING_API void glDetachShader(GLuint program, GLuint shader);
GLBINDING_API void glDisable(GLenum cap);
GLBINDING_API void glDisableDriverControlQCOM(GLuint driverControl);
GLBINDING_API void glDisableVertexAttribArray(GLuint index);
GLBINDING_API void glDisableiEXT(GLenum target, GLuint index);
GLBINDING_API void glDisableiNV(GLenum target, GLuint index);
GLBINDING_API void glDisableiOES(GLenum target, GLuint index);
GLBINDING_API void glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLBINDING_API void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
GLBINDING_API void glDispatchComputeIndirect(GLintptr indirect);
GLBINDING_API void glDrawArrays(GLenum mode, GLint first, GLsizei count);
GLBINDING_API void glDrawArraysIndirect(GLenum mode, const void * indirect);
GLBINDING_API void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
GLBINDING_API void glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLBINDING_API void glDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLBINDING_API void glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
GLBINDING_API void glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLBINDING_API void glDrawBuffers(GLsizei n, const GLenum * bufs);
GLBINDING_API void glDrawBuffersEXT(GLsizei n, const GLenum * bufs);
GLBINDING_API void glDrawBuffersIndexedEXT(GLint n, const GLenum * location, const GLint * indices);
GLBINDING_API void glDrawBuffersNV(GLsizei n, const GLenum * bufs);
GLBINDING_API void glDrawElements(GLenum mode, GLsizei count, GLenum type, const void * indices);
GLBINDING_API void glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLBINDING_API void glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLBINDING_API void glDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect);
GLBINDING_API void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
GLBINDING_API void glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLBINDING_API void glDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
GLBINDING_API void glDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLBINDING_API void glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLBINDING_API void glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLBINDING_API void glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLBINDING_API void glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLBINDING_API void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
GLBINDING_API void glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLBINDING_API void glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLBINDING_API void glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
GLBINDING_API void glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
GLBINDING_API void glEnable(GLenum cap);
GLBINDING_API void glEnableDriverControlQCOM(GLuint driverControl);
GLBINDING_API void glEnableVertexAttribArray(GLuint index);
GLBINDING_API void glEnableiEXT(GLenum target, GLuint index);
GLBINDING_API void glEnableiNV(GLenum target, GLuint index);
GLBINDING_API void glEnableiOES(GLenum target, GLuint index);
GLBINDING_API void glEndConditionalRenderNV();
GLBINDING_API void glEndPerfMonitorAMD(GLuint monitor);
GLBINDING_API void glEndPerfQueryINTEL(GLuint queryHandle);
GLBINDING_API void glEndQuery(GLenum target);
GLBINDING_API void glEndQueryEXT(GLenum target);
GLBINDING_API void glEndTilingQCOM(GLES2bitfield preserveMask);
GLBINDING_API void glEndTransformFeedback();
GLBINDING_API void glExtGetBufferPointervQCOM(GLenum target, void ** params);
GLBINDING_API void glExtGetBuffersQCOM(GLuint * buffers, GLint maxBuffers, GLint * numBuffers);
GLBINDING_API void glExtGetFramebuffersQCOM(GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers);
GLBINDING_API void glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar * source, GLint * length);
GLBINDING_API void glExtGetProgramsQCOM(GLuint * programs, GLint maxPrograms, GLint * numPrograms);
GLBINDING_API void glExtGetRenderbuffersQCOM(GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers);
GLBINDING_API void glExtGetShadersQCOM(GLuint * shaders, GLint maxShaders, GLint * numShaders);
GLBINDING_API void glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params);
GLBINDING_API void glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels);
GLBINDING_API void glExtGetTexturesQCOM(GLuint * textures, GLint maxTextures, GLint * numTextures);
GLBINDING_API GLboolean glExtIsProgramBinaryQCOM(GLuint program);
GLBINDING_API void glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
GLBINDING_API GLsync glFenceSync(GLenum condition, UnusedMask flags);
GLBINDING_API GLsync glFenceSyncAPPLE(GLenum condition, GLES2bitfield flags);
GLBINDING_API void glFinish();
GLBINDING_API void glFinishFenceNV(GLuint fence);
GLBINDING_API void glFlush();
GLBINDING_API void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
GLBINDING_API void glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
GLBINDING_API void glFragmentCoverageColorNV(GLuint color);
GLBINDING_API void glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
GLBINDING_API void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLBINDING_API void glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
GLBINDING_API void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLBINDING_API void glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLBINDING_API void glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLBINDING_API void glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLBINDING_API void glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLBINDING_API void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLBINDING_API void glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
GLBINDING_API void glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLBINDING_API void glFrontFace(GLenum mode);
GLBINDING_API void glGenBuffers(GLsizei n, GLuint * buffers);
GLBINDING_API void glGenFencesNV(GLsizei n, GLuint * fences);
GLBINDING_API void glGenFramebuffers(GLsizei n, GLuint * framebuffers);
GLBINDING_API GLuint glGenPathsNV(GLsizei range);
GLBINDING_API void glGenPerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLBINDING_API void glGenProgramPipelines(GLsizei n, GLuint * pipelines);
GLBINDING_API void glGenProgramPipelinesEXT(GLsizei n, GLuint * pipelines);
GLBINDING_API void glGenQueries(GLsizei n, GLuint * ids);
GLBINDING_API void glGenQueriesEXT(GLsizei n, GLuint * ids);
GLBINDING_API void glGenRenderbuffers(GLsizei n, GLuint * renderbuffers);
GLBINDING_API void glGenSamplers(GLsizei count, GLuint * samplers);
GLBINDING_API void glGenTextures(GLsizei n, GLuint * textures);
GLBINDING_API void glGenTransformFeedbacks(GLsizei n, GLuint * ids);
GLBINDING_API void glGenVertexArrays(GLsizei n, GLuint * arrays);
GLBINDING_API void glGenVertexArraysOES(GLsizei n, GLuint * arrays);
GLBINDING_API void glGenerateMipmap(GLenum target);
GLBINDING_API void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLBINDING_API void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLBINDING_API void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
GLBINDING_API void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
GLBINDING_API void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
GLBINDING_API void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
GLBINDING_API GLint glGetAttribLocation(GLuint program, const GLchar * name);
GLBINDING_API void glGetBooleani_v(GLenum target, GLuint index, GLboolean * data);
GLBINDING_API void glGetBooleanv(GLenum pname, GLboolean * data);
GLBINDING_API void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params);
GLBINDING_API void glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void glGetBufferPointerv(GLenum target, GLenum pname, void ** params);
GLBINDING_API void glGetBufferPointervOES(GLenum target, GLenum pname, void ** params);
GLBINDING_API void glGetCoverageModulationTableNV(GLsizei bufsize, GLfloat * v);
GLBINDING_API GLuint glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLBINDING_API void glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString);
GLBINDING_API void glGetDriverControlsQCOM(GLint * num, GLsizei size, GLuint * driverControls);
GLBINDING_API GLenum glGetError();
GLBINDING_API void glGetFenceivNV(GLuint fence, GLenum pname, GLint * params);
GLBINDING_API void glGetFirstPerfQueryIdINTEL(GLuint * queryId);
GLBINDING_API void glGetFloati_vNV(GLenum target, GLuint index, GLfloat * data);
GLBINDING_API void glGetFloatv(GLenum pname, GLfloat * data);
GLBINDING_API GLint glGetFragDataLocation(GLuint program, const GLchar * name);
GLBINDING_API void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLBINDING_API void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API GLenum glGetGraphicsResetStatusEXT();
GLBINDING_API GLenum glGetGraphicsResetStatusKHR();
GLBINDING_API GLuint64 glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLBINDING_API void glGetInteger64i_v(GLenum target, GLuint index, GLint64 * data);
GLBINDING_API void glGetInteger64v(GLenum pname, GLint64 * data);
GLBINDING_API void glGetInteger64vAPPLE(GLenum pname, GLint64 * params);
GLBINDING_API void glGetIntegeri_v(GLenum target, GLuint index, GLint * data);
GLBINDING_API void glGetIntegeri_vEXT(GLenum target, GLuint index, GLint * data);
GLBINDING_API void glGetIntegerv(GLenum pname, GLint * data);
GLBINDING_API void glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint * params);
GLBINDING_API void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
GLBINDING_API void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat * val);
GLBINDING_API void glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint * nextQueryId);
GLBINDING_API void glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
GLBINDING_API void glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLBINDING_API void glGetObjectPtrLabelKHR(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLBINDING_API void glGetPathCommandsNV(GLuint path, GLubyte * commands);
GLBINDING_API void glGetPathCoordsNV(GLuint path, GLfloat * coords);
GLBINDING_API void glGetPathDashArrayNV(GLuint path, GLfloat * dashArray);
GLBINDING_API GLfloat glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments);
GLBINDING_API void glGetPathMetricRangeNV(PathRenderingMaskNV metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
GLBINDING_API void glGetPathMetricsNV(PathRenderingMaskNV metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
GLBINDING_API void glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat * value);
GLBINDING_API void glGetPathParameterivNV(GLuint path, GLenum pname, GLint * value);
GLBINDING_API void glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
GLBINDING_API void glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
GLBINDING_API void glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
GLBINDING_API void glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void * data);
GLBINDING_API void glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
GLBINDING_API void glGetPerfMonitorCountersAMD(GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
GLBINDING_API void glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
GLBINDING_API void glGetPerfMonitorGroupsAMD(GLint * numGroups, GLsizei groupsSize, GLuint * groups);
GLBINDING_API void glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten);
GLBINDING_API void glGetPerfQueryIdByNameINTEL(GLchar * queryName, GLuint * queryId);
GLBINDING_API void glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
GLBINDING_API void glGetPointervKHR(GLenum pname, void ** params);
GLBINDING_API void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLBINDING_API void glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLBINDING_API void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLBINDING_API void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
GLBINDING_API void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLBINDING_API void glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLBINDING_API void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint * params);
GLBINDING_API void glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint * params);
GLBINDING_API GLuint glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar * name);
GLBINDING_API GLint glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar * name);
GLBINDING_API void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
GLBINDING_API void glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLfloat * params);
GLBINDING_API void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
GLBINDING_API void glGetProgramiv(GLuint program, GLenum pname, GLint * params);
GLBINDING_API void glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 * params);
GLBINDING_API void glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint * params);
GLBINDING_API void glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 * params);
GLBINDING_API void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params);
GLBINDING_API void glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint * params);
GLBINDING_API void glGetQueryiv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void glGetQueryivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint * params);
GLBINDING_API void glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint * params);
GLBINDING_API void glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint * params);
GLBINDING_API void glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint * params);
GLBINDING_API void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params);
GLBINDING_API void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params);
GLBINDING_API void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLBINDING_API void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
GLBINDING_API void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
GLBINDING_API void glGetShaderiv(GLuint shader, GLenum pname, GLint * params);
GLBINDING_API const GLubyte * glGetString(GLenum name);
GLBINDING_API const GLubyte * glGetStringi(GLenum name, GLuint index);
GLBINDING_API void glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLBINDING_API void glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLBINDING_API void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params);
GLBINDING_API void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params);
GLBINDING_API void glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void glGetTexParameterIivOES(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params);
GLBINDING_API void glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint * params);
GLBINDING_API void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void glGetTexParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API GLuint64 glGetTextureHandleNV(GLuint texture);
GLBINDING_API GLuint64 glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler);
GLBINDING_API void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLBINDING_API void glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufsize, GLsizei * length, GLchar * source);
GLBINDING_API GLuint glGetUniformBlockIndex(GLuint program, const GLchar * uniformBlockName);
GLBINDING_API void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
GLBINDING_API GLint glGetUniformLocation(GLuint program, const GLchar * name);
GLBINDING_API void glGetUniformfv(GLuint program, GLint location, GLfloat * params);
GLBINDING_API void glGetUniformiv(GLuint program, GLint location, GLint * params);
GLBINDING_API void glGetUniformuiv(GLuint program, GLint location, GLuint * params);
GLBINDING_API void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint * params);
GLBINDING_API void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params);
GLBINDING_API void glGetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer);
GLBINDING_API void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params);
GLBINDING_API void glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params);
GLBINDING_API void glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLBINDING_API void glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLBINDING_API void glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLBINDING_API void glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLBINDING_API void glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLBINDING_API void glHint(GLenum target, GLenum mode);
GLBINDING_API void glInsertEventMarkerEXT(GLsizei length, const GLchar * marker);
GLBINDING_API void glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
GLBINDING_API void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLBINDING_API void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API GLboolean glIsBuffer(GLuint buffer);
GLBINDING_API GLboolean glIsEnabled(GLenum cap);
GLBINDING_API GLboolean glIsEnablediEXT(GLenum target, GLuint index);
GLBINDING_API GLboolean glIsEnablediNV(GLenum target, GLuint index);
GLBINDING_API GLboolean glIsEnablediOES(GLenum target, GLuint index);
GLBINDING_API GLboolean glIsFenceNV(GLuint fence);
GLBINDING_API GLboolean glIsFramebuffer(GLuint framebuffer);
GLBINDING_API GLboolean glIsImageHandleResidentNV(GLuint64 handle);
GLBINDING_API GLboolean glIsPathNV(GLuint path);
GLBINDING_API GLboolean glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLBINDING_API GLboolean glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y);
GLBINDING_API GLboolean glIsProgram(GLuint program);
GLBINDING_API GLboolean glIsProgramPipeline(GLuint pipeline);
GLBINDING_API GLboolean glIsProgramPipelineEXT(GLuint pipeline);
GLBINDING_API GLboolean glIsQuery(GLuint id);
GLBINDING_API GLboolean glIsQueryEXT(GLuint id);
GLBINDING_API GLboolean glIsRenderbuffer(GLuint renderbuffer);
GLBINDING_API GLboolean glIsSampler(GLuint sampler);
GLBINDING_API GLboolean glIsShader(GLuint shader);
GLBINDING_API GLboolean glIsSync(GLsync sync);
GLBINDING_API GLboolean glIsSyncAPPLE(GLsync sync);
GLBINDING_API GLboolean glIsTexture(GLuint texture);
GLBINDING_API GLboolean glIsTextureHandleResidentNV(GLuint64 handle);
GLBINDING_API GLboolean glIsTransformFeedback(GLuint id);
GLBINDING_API GLboolean glIsVertexArray(GLuint array);
GLBINDING_API GLboolean glIsVertexArrayOES(GLuint array);
GLBINDING_API void glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar * label);
GLBINDING_API void glLineWidth(GLfloat width);
GLBINDING_API void glLinkProgram(GLuint program);
GLBINDING_API void glMakeImageHandleNonResidentNV(GLuint64 handle);
GLBINDING_API void glMakeImageHandleResidentNV(GLuint64 handle, GLenum access);
GLBINDING_API void glMakeTextureHandleNonResidentNV(GLuint64 handle);
GLBINDING_API void glMakeTextureHandleResidentNV(GLuint64 handle);
GLBINDING_API void * glMapBufferOES(GLenum target, GLenum access);
GLBINDING_API void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, BufferAccessMask access);
GLBINDING_API void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLES2bitfield access);
GLBINDING_API void glMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat * m);
GLBINDING_API void glMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat * m);
GLBINDING_API void glMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
GLBINDING_API void glMatrixMult3x2fNV(GLenum matrixMode, const GLfloat * m);
GLBINDING_API void glMatrixMult3x3fNV(GLenum matrixMode, const GLfloat * m);
GLBINDING_API void glMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
GLBINDING_API void glMemoryBarrier(MemoryBarrierMask barriers);
GLBINDING_API void glMemoryBarrierByRegion(MemoryBarrierMask barriers);
GLBINDING_API void glMinSampleShadingOES(GLfloat value);
GLBINDING_API void glMultiDrawArraysEXT(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
GLBINDING_API void glMultiDrawArraysIndirectEXT(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
GLBINDING_API void glMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
GLBINDING_API void glMultiDrawElementsBaseVertexOES(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
GLBINDING_API void glMultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
GLBINDING_API void glMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
GLBINDING_API void glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
GLBINDING_API void glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLBINDING_API void glObjectPtrLabelKHR(const void * ptr, GLsizei length, const GLchar * label);
GLBINDING_API void glPatchParameteriEXT(GLenum pname, GLint value);
GLBINDING_API void glPatchParameteriOES(GLenum pname, GLint value);
GLBINDING_API void glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLBINDING_API void glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
GLBINDING_API void glPathCoverDepthFuncNV(GLenum func);
GLBINDING_API void glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat * dashArray);
GLBINDING_API GLenum glPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLBINDING_API GLenum glPathGlyphIndexRangeNV(GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint_array_2 baseAndCount);
GLBINDING_API void glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLBINDING_API void glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, PathFontStyle fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLBINDING_API GLenum glPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLBINDING_API void glPathParameterfNV(GLuint path, GLenum pname, GLfloat value);
GLBINDING_API void glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat * value);
GLBINDING_API void glPathParameteriNV(GLuint path, GLenum pname, GLint value);
GLBINDING_API void glPathParameterivNV(GLuint path, GLenum pname, const GLint * value);
GLBINDING_API void glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
GLBINDING_API void glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
GLBINDING_API void glPathStringNV(GLuint path, GLenum format, GLsizei length, const void * pathString);
GLBINDING_API void glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLBINDING_API void glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
GLBINDING_API void glPauseTransformFeedback();
GLBINDING_API void glPixelStorei(GLenum pname, GLint param);
GLBINDING_API GLboolean glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
GLBINDING_API void glPolygonModeNV(GLenum face, GLenum mode);
GLBINDING_API void glPolygonOffset(GLfloat factor, GLfloat units);
GLBINDING_API void glPopDebugGroupKHR();
GLBINDING_API void glPopGroupMarkerEXT();
GLBINDING_API void glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLBINDING_API void glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLBINDING_API void glProgramBinary(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
GLBINDING_API void glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void * binary, GLint length);
GLBINDING_API void glProgramParameteri(GLuint program, GLenum pname, GLint value);
GLBINDING_API void glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
GLBINDING_API void glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
GLBINDING_API void glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
GLBINDING_API void glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
GLBINDING_API void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glProgramUniform1i(GLuint program, GLint location, GLint v0);
GLBINDING_API void glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
GLBINDING_API void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
GLBINDING_API void glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
GLBINDING_API void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLBINDING_API void glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLBINDING_API void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
GLBINDING_API void glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
GLBINDING_API void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
GLBINDING_API void glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
GLBINDING_API void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLBINDING_API void glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLBINDING_API void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLBINDING_API void glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLBINDING_API void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLBINDING_API void glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLBINDING_API void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLBINDING_API void glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLBINDING_API void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLBINDING_API void glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLBINDING_API void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLBINDING_API void glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLBINDING_API void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
GLBINDING_API void glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLBINDING_API void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLBINDING_API void glPushGroupMarkerEXT(GLsizei length, const GLchar * marker);
GLBINDING_API void glQueryCounterEXT(GLuint id, GLenum target);
GLBINDING_API void glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations);
GLBINDING_API void glReadBuffer(GLenum src);
GLBINDING_API void glReadBufferIndexedEXT(GLenum src, GLint index);
GLBINDING_API void glReadBufferNV(GLenum mode);
GLBINDING_API void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
GLBINDING_API void glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLBINDING_API void glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLBINDING_API void glReleaseShaderCompiler();
GLBINDING_API void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glResolveDepthValuesNV();
GLBINDING_API void glResolveMultisampleFramebufferAPPLE();
GLBINDING_API void glResumeTransformFeedback();
GLBINDING_API void glSampleCoverage(GLfloat value, GLboolean invert);
GLBINDING_API void glSampleMaski(GLuint maskNumber, GLES2bitfield mask);
GLBINDING_API void glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint * param);
GLBINDING_API void glSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint * param);
GLBINDING_API void glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint * param);
GLBINDING_API void glSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint * param);
GLBINDING_API void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
GLBINDING_API void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param);
GLBINDING_API void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
GLBINDING_API void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param);
GLBINDING_API void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void glScissorArrayvNV(GLuint first, GLsizei count, const GLint * v);
GLBINDING_API void glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLBINDING_API void glScissorIndexedvNV(GLuint index, const GLint * v);
GLBINDING_API void glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
GLBINDING_API void glSetFenceNV(GLuint fence, GLenum condition);
GLBINDING_API void glShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
GLBINDING_API void glShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
GLBINDING_API void glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLES2bitfield preserveMask);
GLBINDING_API void glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
GLBINDING_API void glStencilFunc(GLenum func, GLint ref, GLuint mask);
GLBINDING_API void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
GLBINDING_API void glStencilMask(GLuint mask);
GLBINDING_API void glStencilMaskSeparate(GLenum face, GLuint mask);
GLBINDING_API void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
GLBINDING_API void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLBINDING_API void glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
GLBINDING_API void glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
GLBINDING_API void glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
GLBINDING_API void glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits);
GLBINDING_API GLboolean glTestFenceNV(GLuint fence);
GLBINDING_API void glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
GLBINDING_API void glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer);
GLBINDING_API void glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLBINDING_API void glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLBINDING_API void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void glTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLBINDING_API void glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void glTexParameterIivOES(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params);
GLBINDING_API void glTexParameterIuivOES(GLenum target, GLenum pname, const GLuint * params);
GLBINDING_API void glTexParameterf(GLenum target, GLenum pname, GLfloat param);
GLBINDING_API void glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void glTexParameteri(GLenum target, GLenum pname, GLint param);
GLBINDING_API void glTexParameteriv(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLBINDING_API void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLBINDING_API void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLBINDING_API void glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLBINDING_API void glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLBINDING_API void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLBINDING_API void glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLBINDING_API void glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLBINDING_API void glTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLBINDING_API void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
GLBINDING_API void glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void glUniform1f(GLint location, GLfloat v0);
GLBINDING_API void glUniform1fv(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glUniform1i(GLint location, GLint v0);
GLBINDING_API void glUniform1iv(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glUniform1ui(GLint location, GLuint v0);
GLBINDING_API void glUniform1uiv(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
GLBINDING_API void glUniform2fv(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glUniform2i(GLint location, GLint v0, GLint v1);
GLBINDING_API void glUniform2iv(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glUniform2ui(GLint location, GLuint v0, GLuint v1);
GLBINDING_API void glUniform2uiv(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLBINDING_API void glUniform3fv(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
GLBINDING_API void glUniform3iv(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLBINDING_API void glUniform3uiv(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLBINDING_API void glUniform4fv(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLBINDING_API void glUniform4iv(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLBINDING_API void glUniform4uiv(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
GLBINDING_API void glUniformHandleui64NV(GLint location, GLuint64 value);
GLBINDING_API void glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 * value);
GLBINDING_API void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API GLboolean glUnmapBuffer(GLenum target);
GLBINDING_API GLboolean glUnmapBufferOES(GLenum target);
GLBINDING_API void glUseProgram(GLuint program);
GLBINDING_API void glUseProgramStages(GLuint pipeline, UseProgramStageMask stages, GLuint program);
GLBINDING_API void glUseProgramStagesEXT(GLuint pipeline, GLES2bitfield stages, GLuint program);
GLBINDING_API void glValidateProgram(GLuint program);
GLBINDING_API void glValidateProgramPipeline(GLuint pipeline);
GLBINDING_API void glValidateProgramPipelineEXT(GLuint pipeline);
GLBINDING_API void glVertexAttrib1f(GLuint index, GLfloat x);
GLBINDING_API void glVertexAttrib1fv(GLuint index, const GLfloat * v);
GLBINDING_API void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
GLBINDING_API void glVertexAttrib2fv(GLuint index, const GLfloat * v);
GLBINDING_API void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void glVertexAttrib3fv(GLuint index, const GLfloat * v);
GLBINDING_API void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void glVertexAttrib4fv(GLuint index, const GLfloat * v);
GLBINDING_API void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
GLBINDING_API void glVertexAttribDivisor(GLuint index, GLuint divisor);
GLBINDING_API void glVertexAttribDivisorANGLE(GLuint index, GLuint divisor);
GLBINDING_API void glVertexAttribDivisorEXT(GLuint index, GLuint divisor);
GLBINDING_API void glVertexAttribDivisorNV(GLuint index, GLuint divisor);
GLBINDING_API void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLBINDING_API void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void glVertexAttribI4iv(GLuint index, const GLint * v);
GLBINDING_API void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLBINDING_API void glVertexAttribI4uiv(GLuint index, const GLuint * v);
GLBINDING_API void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLBINDING_API void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
GLBINDING_API void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
GLBINDING_API void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void glViewportArrayvNV(GLuint first, GLsizei count, const GLfloat * v);
GLBINDING_API void glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLBINDING_API void glViewportIndexedfvNV(GLuint index, const GLfloat * v);
GLBINDING_API void glWaitSync(GLsync sync, UnusedMask flags, GLuint64 timeout);
GLBINDING_API void glWaitSyncAPPLE(GLsync sync, GLES2bitfield flags, GLuint64 timeout);
GLBINDING_API void glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);

} // namespace gles
